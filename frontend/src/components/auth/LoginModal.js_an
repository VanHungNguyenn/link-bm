import React, { Component, Fragment } from 'react';
import {
  BrowserRouter as Router,
  // Switch,
  // Route,
  Link
} from "react-router-dom";
import {
	// Button,
	// Modal,
	// ModalHeader,
	// ModalBody,
	// Form,
	// FormGroup,
	// Label,
	// Input,
	// NavLink,
	Alert
} from 'reactstrap';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import { login } from '../../actions/authActions';
import { clearErrors } from '../../actions/errorActions';
import RegisterModal from './RegisterModal';
import Swal from 'sweetalert2';

class LoginModal extends Component {
	state = {
		modal: false,
		name: '',
		password: '',
		msg: null
	}
	
	static propTypes =  {
		isAuthenticated: PropTypes.bool,
		error: PropTypes.object.isRequired,
		login: PropTypes.func.isRequired,
		clearErrors: PropTypes.func.isRequired
	}
	
	componentDidUpdate(prevProps) {
		const { error, isAuthenticated } = this.props;
		if (error !== prevProps.error) {
			// Check for login error
			if (error.id === 'LOGIN_FAIL') {
				Swal.fire(error.msg.msg, '', 'error');
			} else if(error.id === 'LOGIN_SUCCESS') {
				Swal.fire(error.msg.msg, '', 'success');
			}
		}
		
		// If authenticated, close modal
		if (this.state.modal) {
			if (isAuthenticated) {
				this.clearAlert();
			}
		}
	}
	
	clearAlert = () => {
		// Clear errors
		this.props.clearErrors();
		// this.setState({
			// modal: !this.state.modal
		// });
	}
	
	changeFormLogRegister = () => {
		this.props.clearErrors();
		this.setState({
			modal: !this.state.modal
		});
		
	}
	
	onChange = e => {
		this.setState({ [e.target.name]: e.target.value });
	};
	
	onSubmit = e => {
		e.preventDefault();
		
		const { name, password } = this.state;
		
		// Create user object
		const user = {
			name,
			password
		};
		
		// Attempt to login
		this.props.login(user);
	};
	
	render() {
		const domainSite = window.location.hostname;
		const formLogin = (
			<Router>
			<Fragment>

				<div id="page-container" className="side-trans-enabled">
					<main id="main-container">
						<div className="bg-image" style={{ "background": "#3c90df" }}>
							<div className="row no-gutters justify-content-center bg-black-75">
								<div className="hero-static col-sm-8 col-md-6 col-xl-4 d-flex align-items-center p-2 px-sm-0">
									<div className="block block-transparent block-rounded w-100 mb-0 overflow-hidden">
										<div className="block-content block-content-full  bg-white" style={{"padding":"20px !important"}}>
											<div className="mb-2 text-center">
		                                        <a className="link-fx font-w700 font-size-h1" href="index.html">
													<span className="text-dark text-uppercase">{domainSite.slice(0, domainSite.lastIndexOf('.'))}</span>
													<span className="text-dark text-uppercase">{domainSite.indexOf('.') > -1 ? domainSite.slice(domainSite.lastIndexOf('.')) : ''}</span>
		                                        </a>
		                                        <p className="text-uppercase font-w700 font-size-sm text-muted">Đăng nhập</p>
		                                    </div>
											{ this.state.msg ? <Alert color="danger">{ this.state.msg }</Alert> : null }
											<form className="js-validation-signin user" onSubmit={this.onSubmit} style={{"padding":"0px 10% 0px 10%"}}>
												<div className="form-group">
													<div className="input-group">
														<input type="text" className="form-control form-control-user" id="name" name="name" aria-describedby="emailHelp" placeholder="Tên tài khoản" onChange={this.onChange} />
														<div className="input-group-append">
															<span className="input-group-text">
																<i className="fa fa-user-circle"></i>
															</span>
														</div>
													</div>
												</div>
												<div className="form-group">
													<div className="input-group">
														<input type="password" className="form-control form-control-user" id="password" name="password" placeholder="Mật khẩu" onChange={this.onChange} />
														<div className="input-group-append">
															<span className="input-group-text">
																<i className="fa fa-asterisk"></i>
															</span>
														</div>
													</div>
												</div>
												<div class="form-group text-center">
		                                            <button onClick={this.clearAlert} type="submit" class="btn btn-hero-primary">
		                                                <i class="fa fa-fw fa-sign-in-alt mr-1"></i> Đăng nhập
		                                            </button>
		                                        </div>
											</form>

										</div>
										<div class="block-content bg-body">
					                        <div class="d-flex justify-content-center text-center push">
					                            <div class="font-w600 font-size-sm py-1 text-center">
					                                Chưa có tài khoản? <Link to="/" className="small" onClick={this.changeFormLogRegister} >Tạo tài khoản!</Link>
					                            </div>
					                        </div>
					                    </div>
									</div>
								</div>
							</div>
						</div>

					</main>
				</div>
			</Fragment>
			</Router>
		);
		
		const formRegister = (
			<Fragment>
				<RegisterModal action={this.changeFormLogRegister} />
			</Fragment>
		);
		
		return (
			<Fragment>
				{this.state.modal ? formRegister : formLogin }
			</Fragment>
		);
	}
}

const mapStateToProps = state => ({
	isAuthenticated: state.auth.isAuthenticated,
	error: state.error
})

export default connect(mapStateToProps, { login, clearErrors })(LoginModal);